<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel10.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>